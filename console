#!/usr/bin/env php
<?php
declare(strict_types = 1);

use Externals\Application\Application;
use Externals\Application\Command\DbCommand;
use Externals\EmailSearchIndex;
use Externals\EmailSynchronizer;
use Externals\Email\EmailContentParser;
use Externals\Email\EmailRepository;
use Symfony\Bridge\Monolog\Handler\ConsoleHandler;
use Symfony\Component\Console\Output\ConsoleOutput;

require_once __DIR__ . '/vendor/autoload.php';
require_once __DIR__ . '/.puli/GeneratedPuliFactory.php';

$application = new Application;
$cli = $application->cli();

$cli->command('db [--force]', [DbCommand::class, 'setup']);
$cli->command('db-purge [--force]', [DbCommand::class, 'purge']);

$cli->command('sync [days]', function (int $days = null, EmailSynchronizer $synchronizer) {
    $synchronizer->synchronize($days ?? 1);
});

$cli->command('reparse', function (EmailRepository $emailRepository, EmailContentParser $contentParser) {
    foreach ($emailRepository->findAll() as $email) {
        $newContent = $contentParser->parse($email->getOriginalContent());
        $email->setContent($newContent);
        $emailRepository->updateContent($email);
    }
});

$cli->command('reindex', function (EmailRepository $emailRepository, EmailSearchIndex $searchIndex) {
    foreach ($emailRepository->findAll() as $email) {
        $searchIndex->indexEmail($email);
    }
});

$output = new ConsoleOutput();
$application->getContainer()->get(ConsoleHandler::class)->setOutput($output);
$cli->run(null, $output);
