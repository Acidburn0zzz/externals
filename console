#!/usr/bin/env php
<?php
declare(strict_types = 1);

use Externals\Application\Command\DbCommand;
use Externals\Email\EmailRepository;
use Externals\EmailSynchronizer;
use Psr\Container\ContainerInterface;
use React\Http\Server;
use Stratify\Framework\Application;
use Symfony\Bridge\Monolog\Handler\ConsoleHandler;
use Symfony\Component\Console\Output\ConsoleOutput;
use Symfony\Component\Console\Output\OutputInterface;

/** @var Application $application */
$application = require __DIR__ . '/res/bootstrap.php';

$cli = $application->cli();

$cli->command('serve', function (\Stratify\Http\Application $http, ContainerInterface $container) {
    $loop = React\EventLoop\Factory::create();

    $server = new Server([$http, 'handle']);
    $server->listen(new React\Socket\Server($container->get('http.port'), $loop));

    $loop->run();
});

$cli->command('db [--force]', [DbCommand::class, 'setup']);
$cli->command('db-purge [--force]', [DbCommand::class, 'purge']);
$cli->command('db-truncate [--force]', [DbCommand::class, 'truncate']);

$cli->command('sync [max]', function (int $max = null, EmailSynchronizer $synchronizer, OutputInterface $output) {
    $start = microtime(true);
    $synchronizer->synchronize($max);
    $time = microtime(true) - $start;
    $output->writeln("<comment>Emails have been synchronized in $time seconds</comment>");
});

$cli->command('refresh-threads', function (EmailRepository $repository, OutputInterface $output) {
    $start = microtime(true);
    $repository->refreshThreads();
    $time = microtime(true) - $start;
    $output->writeln("<comment>Threads have been refreshed in $time seconds</comment>");
});

$cli->command('container:get id', function (string $id, ContainerInterface $container) {
    var_dump($container->get($id));
});

$output = new ConsoleOutput();
$application->getContainer()->get(ConsoleHandler::class)->setOutput($output);
$cli->run(null, $output);
