#!/usr/bin/env php
<?php
declare(strict_types = 1);

use Externals\Application\Application;
use Externals\Application\Command\InitCommand;
use Externals\Domain\Command\Handler\ReceiveEmailHandler;
use Externals\Domain\Command\ReceiveEmail;
use Externals\Domain\Email\EmailContentParser;
use Externals\Domain\Email\EmailRepository;
use Imapi\Client;
use Imapi\Query\QueryBuilder;
use Symfony\Component\Console\Output\OutputInterface;

require_once __DIR__ . '/vendor/autoload.php';
require_once __DIR__ . '/.puli/GeneratedPuliFactory.php';

$cli = (new Application)->cli();

$cli->command('init', InitCommand::class);

$cli->command('sync', function (Client $imapClient, ReceiveEmailHandler $receiveEmailHandler, OutputInterface $output) {
    $query = QueryBuilder::create('INBOX')
        ->youngerThan(3600*24*7)
        ->getQuery();
    $emailIds = $imapClient->getEmailIds($query);

    $output->writeln(sprintf('<comment>%d emails to synchronize</comment>', count($emailIds)));

    foreach ($emailIds as $emailId) {
        $receiveEmailHandler(new ReceiveEmail((string) $emailId));
    }
});

$cli->command('reparse', function (EmailRepository $emailRepository, EmailContentParser $contentParser) {
    foreach ($emailRepository->findAll() as $email) {
        $newContent = $contentParser->parse($email->getOriginalContent());
        $email->setContent($newContent);
        $emailRepository->update($email);
    }
});

$cli->run();
